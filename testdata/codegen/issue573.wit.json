{
  "worlds": [
    {
      "name": "types-example",
      "imports": {
        "interface-0": {
          "interface": {
            "id": 0
          }
        },
        "t2-renamed": {
          "type": 39
        },
        "t10": {
          "type": 40
        },
        "permissions": {
          "type": 41
        },
        "log-level": {
          "type": 42
        },
        "empty": {
          "type": 43
        },
        "interface-1": {
          "interface": {
            "id": 1
          }
        },
        "print": {
          "function": {
            "name": "print",
            "kind": "freestanding",
            "params": [
              {
                "name": "message",
                "type": "string"
              },
              {
                "name": "level",
                "type": 42
              }
            ]
          }
        },
        "inline": {
          "interface": {
            "id": 3
          }
        }
      },
      "exports": {
        "f-f1": {
          "function": {
            "name": "f-f1",
            "kind": "freestanding",
            "params": [
              {
                "name": "typedef",
                "type": 40
              }
            ],
            "result": 40
          }
        },
        "f1": {
          "function": {
            "name": "f1",
            "kind": "freestanding",
            "params": [
              {
                "name": "f",
                "type": "f32"
              },
              {
                "name": "f-list",
                "type": 47
              }
            ],
            "result": 48
          }
        },
        "re-named": {
          "function": {
            "name": "re-named",
            "kind": "freestanding",
            "params": [
              {
                "name": "perm",
                "type": 49
              },
              {
                "name": "e",
                "type": 50
              }
            ],
            "result": 39,
            "docs": {
              "contents": "t2 has been renamed with `use self.types-interface.{t2 as t2-renamed}`"
            }
          }
        },
        "re-named2": {
          "function": {
            "name": "re-named2",
            "kind": "freestanding",
            "params": [
              {
                "name": "tup",
                "type": 52
              },
              {
                "name": "e",
                "type": 43
              }
            ],
            "result": 54
          }
        },
        "interface-0": {
          "interface": {
            "id": 0
          }
        },
        "interface-2": {
          "interface": {
            "id": 2
          }
        }
      },
      "package": 0
    }
  ],
  "interfaces": [
    {
      "name": "types-interface",
      "types": {
        "human": 0,
        "errno": 1,
        "permissions": 2,
        "t1": 3,
        "t2": 4,
        "t3": 5,
        "t4": 6,
        "r": 10,
        "t5": 11,
        "t6": 12,
        "t7": 13,
        "t8": 14,
        "t9": 15,
        "t10": 16
      },
      "functions": {},
      "package": 0
    },
    {
      "name": "api-imports",
      "types": {
        "t7": 17,
        "human": 22
      },
      "functions": {
        "api-a1-b2": {
          "name": "api-a1-b2",
          "kind": "freestanding",
          "params": [
            {
              "name": "arg",
              "type": 23
            }
          ],
          "result": 24
        }
      },
      "docs": {
        "contents": "Comment for import interface"
      },
      "package": 0
    },
    {
      "name": "api",
      "types": {
        "errno": 27,
        "t5": 29
      },
      "functions": {
        "f1": {
          "name": "f1",
          "kind": "freestanding",
          "params": [],
          "result": 31,
          "docs": {
            "contents": "Comment for export function"
          }
        },
        "class": {
          "name": "class",
          "kind": "freestanding",
          "params": [
            {
              "name": "break",
              "type": 33
            }
          ],
          "result": 34
        },
        "continue": {
          "name": "continue",
          "kind": "freestanding",
          "params": [
            {
              "name": "abstract",
              "type": 36
            },
            {
              "name": "extends",
              "type": 34
            }
          ],
          "result": 38
        }
      },
      "package": 0
    },
    {
      "name": null,
      "types": {},
      "functions": {
        "inline-imp": {
          "name": "inline-imp",
          "kind": "freestanding",
          "params": [
            {
              "name": "args",
              "type": 44
            }
          ],
          "result": 45,
          "docs": {
            "contents": "Comment for import inline function"
          }
        }
      },
      "docs": {
        "contents": "Comment for import inline"
      },
      "package": 0
    }
  ],
  "types": [
    {
      "name": "human",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "baby",
              "type": null
            },
            {
              "name": "child",
              "type": "u32",
              "docs": {
                "contents": "type payload"
              }
            },
            {
              "name": "adult",
              "type": null,
              "docs": {
                "contents": "optional type payload"
              }
            }
          ]
        }
      },
      "owner": {
        "interface": 0
      },
      "docs": {
        "contents": "values of this type will be one of the specified cases"
      }
    },
    {
      "name": "errno",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "too-big"
            },
            {
              "name": "too-small"
            },
            {
              "name": "too-fast"
            },
            {
              "name": "too-slow"
            }
          ]
        }
      },
      "owner": {
        "interface": 0
      },
      "docs": {
        "contents": "similar to `variant`, but no type payloads"
      }
    },
    {
      "name": "permissions",
      "kind": {
        "flags": {
          "flags": [
            {
              "name": "read"
            },
            {
              "name": "write"
            },
            {
              "name": "exec"
            }
          ]
        }
      },
      "owner": {
        "interface": 0
      },
      "docs": {
        "contents": "a bitflags type"
      }
    },
    {
      "name": "t1",
      "kind": {
        "type": "u32"
      },
      "owner": {
        "interface": 0
      },
      "docs": {
        "contents": "type aliases are allowed to primitive types and additionally here are some\nexamples of other types"
      }
    },
    {
      "name": "t2",
      "kind": {
        "tuple": {
          "types": [
            "u32",
            "u64"
          ]
        }
      },
      "owner": {
        "interface": 0
      }
    },
    {
      "name": "t3",
      "kind": {
        "type": "string"
      },
      "owner": {
        "interface": 0
      }
    },
    {
      "name": "t4",
      "kind": {
        "option": "u32"
      },
      "owner": {
        "interface": 0
      }
    },
    {
      "name": null,
      "kind": {
        "option": 6
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            "string",
            7
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 8
      },
      "owner": null
    },
    {
      "name": "r",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "a",
              "type": "u32"
            },
            {
              "name": "b",
              "type": "string"
            },
            {
              "name": "c",
              "type": 9
            }
          ]
        }
      },
      "owner": {
        "interface": 0
      },
      "docs": {
        "contents": "\"package of named fields\""
      }
    },
    {
      "name": "t5",
      "kind": {
        "result": {
          "ok": null,
          "err": 1
        }
      },
      "owner": {
        "interface": 0
      },
      "docs": {
        "contents": "no \"ok\" type"
      }
    },
    {
      "name": "t6",
      "kind": {
        "result": {
          "ok": "string",
          "err": null
        }
      },
      "owner": {
        "interface": 0
      },
      "docs": {
        "contents": "no \"ok\" type"
      }
    },
    {
      "name": "t7",
      "kind": {
        "result": {
          "ok": "char",
          "err": 1
        }
      },
      "owner": {
        "interface": 0
      },
      "docs": {
        "contents": "no \"err\" type"
      }
    },
    {
      "name": "t8",
      "kind": {
        "result": {
          "ok": null,
          "err": null
        }
      },
      "owner": {
        "interface": 0
      },
      "docs": {
        "contents": "both types specified"
      }
    },
    {
      "name": "t9",
      "kind": {
        "list": "string"
      },
      "owner": {
        "interface": 0
      },
      "docs": {
        "contents": "no \"ok\" or \"err\" type"
      }
    },
    {
      "name": "t10",
      "kind": {
        "type": 15
      },
      "owner": {
        "interface": 0
      }
    },
    {
      "name": "t7",
      "kind": {
        "type": 13
      },
      "owner": {
        "interface": 1
      }
    },
    {
      "name": null,
      "kind": {
        "option": "string"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 18
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            "s64"
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            "string",
            19,
            20
          ]
        }
      },
      "owner": null
    },
    {
      "name": "human",
      "kind": {
        "variant": {
          "cases": [
            {
              "name": "baby",
              "type": null
            },
            {
              "name": "child",
              "type": "u64"
            },
            {
              "name": "adult",
              "type": 21
            }
          ]
        }
      },
      "owner": {
        "interface": 1
      },
      "docs": {
        "contents": "Same name as the type in `types-interface`, but this is a different type"
      }
    },
    {
      "name": null,
      "kind": {
        "list": 22
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            17,
            22
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": "s64"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": "char"
      },
      "owner": null
    },
    {
      "name": "errno",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "a-u1",
              "type": "u64"
            },
            {
              "name": "list-s1",
              "type": 25,
              "docs": {
                "contents": "A list of signed 64-bit integers"
              }
            },
            {
              "name": "str",
              "type": 18
            },
            {
              "name": "c",
              "type": 26
            }
          ]
        }
      },
      "owner": {
        "interface": 2
      }
    },
    {
      "name": null,
      "kind": {
        "option": 27
      },
      "owner": null
    },
    {
      "name": "t5",
      "kind": {
        "result": {
          "ok": null,
          "err": 28
        }
      },
      "owner": {
        "interface": 2
      },
      "docs": {
        "contents": "Comment for t5 in api"
      }
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            "s32"
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            30,
            "string"
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 29
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 32
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            "u32"
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": 27
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 35
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 34
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            37
          ]
        }
      },
      "owner": null
    },
    {
      "name": "t2-renamed",
      "kind": {
        "type": 4
      },
      "owner": {
        "world": 0
      }
    },
    {
      "name": "t10",
      "kind": {
        "type": 16
      },
      "owner": {
        "world": 0
      }
    },
    {
      "name": "permissions",
      "kind": {
        "type": 2
      },
      "owner": {
        "world": 0
      }
    },
    {
      "name": "log-level",
      "kind": {
        "enum": {
          "cases": [
            {
              "name": "debug",
              "docs": {
                "contents": "lowest level"
              }
            },
            {
              "name": "info"
            },
            {
              "name": "warn"
            },
            {
              "name": "error"
            }
          ]
        }
      },
      "owner": {
        "world": 0
      }
    },
    {
      "name": "empty",
      "kind": {
        "record": {
          "fields": [
            {
              "name": "not-empty-anymore",
              "type": "bool"
            }
          ]
        }
      },
      "owner": {
        "world": 0
      },
      "docs": {
        "contents": "NB: this record used to be empty, but that's no longer valid, so now it's\nnon-empty. Don't want to delete the whole test however."
      }
    },
    {
      "name": null,
      "kind": {
        "list": 26
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "result": {
          "ok": null,
          "err": "char"
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            "char",
            "f64"
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": 46
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            "s64",
            "string"
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 41
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": 43
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "list": "u16"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            51
          ]
        }
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "option": "u8"
      },
      "owner": null
    },
    {
      "name": null,
      "kind": {
        "tuple": {
          "types": [
            53,
            "s8"
          ]
        }
      },
      "owner": null
    }
  ],
  "packages": [
    {
      "name": "foo:foo",
      "interfaces": {
        "types-interface": 0,
        "api-imports": 1,
        "api": 2
      },
      "worlds": {
        "types-example": 0
      }
    }
  ]
}